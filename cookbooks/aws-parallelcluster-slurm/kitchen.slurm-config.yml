---
verifier:
  name: inspec
  inspec_tests:
    - cookbooks/aws-parallelcluster-slurm/test

suites:

# Resources
  - name: dns_domain
    run_list:
      - recipe[aws-parallelcluster-tests::setup]
      - recipe[aws-parallelcluster-tests::test_resource]
    verifier:
      controls:
        - dns_domain_configured
    attributes:
      resource: dns_domain:configure
      cluster:
        dns_domain: test-domain

# Recipes
  - name: compute_slurmd_systemd
    run_list:
      - recipe[aws-parallelcluster-slurm::config_slurmd_systemd_service]
    verifier:
      controls:
        - systemd_slurmd_service
        - systemd_slurmd_service_files
  - name: compute_slurmd_systemd_gpu
    driver:
      instance_type: g4dn.xlarge
    run_list:
      - recipe[aws-parallelcluster-slurm::config_slurmd_systemd_service]
    verifier:
      controls:
        - systemd_slurmd_service
        - systemd_slurmd_service_files
        - systemd_slurmd_service_nvidia_gpu_nodes
  - name: custom_slurm_settings_file_via_s3
    # check that we can retrieve a custom slurm settings file using the S3 protocol
    run_list:
      - recipe[aws-parallelcluster-tests::setup]
      - recipe[aws-parallelcluster-slurm::retrieve_remote_custom_settings_file]
    verifier:
      controls:
        - custom_settings_file_retrieved
    attributes:
      dependencies:
        - recipe:aws-parallelcluster-platform::directories
        - recipe:aws-parallelcluster-platform::cookbook_virtualenv
      cluster:
        config:
          Scheduling:
            SlurmSettings:
              # here we are just interested in testing that we can retrieve a file from S3 through S3 protocol
              CustomSlurmSettingsIncludeFile: 's3://us-east-1-aws-parallelcluster/templates/1-click/serverless-database.yaml'
              LocalPath: '/tmp/custom_slurm_settings_include_file_slurm.conf'
  - name: custom_slurm_settings_file_via_https
    # check that we can retrieve a custom slurm settings file from internet through HTTP/S
    run_list:
      - recipe[aws-parallelcluster-tests::setup]
      - recipe[aws-parallelcluster-slurm::retrieve_remote_custom_settings_file]
    verifier:
      controls:
        - custom_settings_file_retrieved
    attributes:
      dependencies:
        - recipe:aws-parallelcluster-platform::directories
        - recipe:aws-parallelcluster-platform::cookbook_virtualenv
      cluster:
        config:
          Scheduling:
            SlurmSettings:
              # here we are just interested in testing that we can retrieve a file from S3 through https protocol
              CustomSlurmSettingsIncludeFile: 'https://us-east-1-aws-parallelcluster.s3.amazonaws.com/templates/1-click/serverless-database.yaml'
              LocalPath: '/tmp/custom_slurm_settings_include_file_slurm.conf'
  - name: gpu_health_check
    run_list:
      - recipe[aws-parallelcluster-tests::setup]
      - recipe[aws-parallelcluster-slurm::config_health_check]
    verifier:
      controls:
        - /gpu_health_check_execution/
    driver:
      instance_type: g4dn.xlarge
#      instance_type: p5.48xlarge
    attributes:
      dependencies:
        - recipe:aws-parallelcluster-slurm::mock_slurm
        - resource:node_attributes
#        - resource:fabric_manager:configure # Needed for Multi-gpu instance like p5.48xlarge
      cluster:
        node_type: HeadNode
        scheduler: 'slurm'
        slurm:
          install_dir: "/opt/slurm"
  - name: gpu_health_check_dcgm_not_supported
    run_list:
      - recipe[aws-parallelcluster-tests::setup]
      - recipe[aws-parallelcluster-slurm::config_health_check]
    verifier:
      controls:
        - /gpu_health_check_execution/
    driver:
      instance_type: g2.2xlarge
    attributes:
      dependencies:
        - recipe:aws-parallelcluster-slurm::mock_slurm
        - resource:node_attributes
      cluster:
        node_type: HeadNode
        scheduler: 'slurm'
        slurm:
          install_dir: "/opt/slurm"
  - name: gpu_health_check_no_gpu
    run_list:
      - recipe[aws-parallelcluster-tests::setup]
      - recipe[aws-parallelcluster-slurm::config_health_check]
    verifier:
      controls:
        - /gpu_health_check_execution/
    driver:
      instance_type: c5.xlarge
    attributes:
      dependencies:
        - recipe:aws-parallelcluster-slurm::mock_slurm
        - resource:node_attributes
      cluster:
        node_type: HeadNode
        scheduler: 'slurm'
        slurm:
          install_dir: "/opt/slurm"
  - name: health_check
    run_list:
      - recipe[aws-parallelcluster-slurm::mock_slurm]
      - recipe[aws-parallelcluster-slurm::config_health_check]
    verifier:
      controls:
        - health_check_configured
    attributes:
      cluster:
        slurm:
          install_dir: "/opt/slurm"
  - name: init_dns
    run_list:
      - recipe[aws-parallelcluster-tests::setup]
      - recipe[aws-parallelcluster-slurm::init_dns]
    verifier:
      controls:
        - hostname_configured
    driver:
      privileged: true # required to set hostname
    attributes:
      dependencies:
      cluster:
        node_type: HeadNode
        dns_domain: test-domain
        assigned_hostname: fqn-hostname
        assigned_short_hostname: short-hostname
      ec2:
        local_hostname: dokken
        local_ipv4: 172.17.1.15
      ipaddress: 172.17.1.15
  - name: mount_slurm_dir
    run_list:
      - recipe[aws-parallelcluster-tests::setup]
      - recipe[aws-parallelcluster-slurm::mount_slurm_dir]
    verifier:
      controls:
        - mount_slurm_dir
    attributes:
      dependencies:
        - resource:nfs
        - recipe:aws-parallelcluster-slurm::mock_slurm_dir
      cluster:
        node_type: ComputeFleet
        head_node_private_ip: '127.0.0.1'
