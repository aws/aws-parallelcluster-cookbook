#!/bin/bash
# This script updates the munge key used in the system.
# It fetches the key from AWS Secrets Manager or generates one if it doesn't exist.
# The script does not require any argument.
#
# Usage: ./update_munge_key.sh
# #

set -e

MUNGE_KEY_FILE="/etc/munge/munge.key"
SECRET_ARN="<%= @munge_key_secret_arn %>"
REGION="<%= @region %>"
MUNGE_USER="<%= @munge_user %>"
MUNGE_GROUP="<%= @munge_group %>"

# Remove current munge key if exists
if [ -f "${MUNGE_KEY_FILE}" ]; then
  rm -f ${MUNGE_KEY_FILE}
fi

# If SECRET_ARN is provided, fetch the munge key from Secrets Manager
if [ -n "${SECRET_ARN}" ]; then
  echo "Fetching munge key from AWS Secrets Manager: ${SECRET_ARN}"
  encoded_key=$(aws secretsmanager get-secret-value --secret-id ${SECRET_ARN} --query 'SecretString' --output text --region ${REGION})

  if [ -z "${encoded_key}" ]; then
    echo "Error fetching munge key from Secrets Manager or the key is empty"
    exit 1
  fi

  # Decode munge key and write to munge.key file
  decoded_key=$(echo $encoded_key | base64 -d)
  if [ $? -ne 0 ]; then
    echo "Error decoding the munge key with base64"
    exit 1
  fi

  echo "${decoded_key}" > ${MUNGE_KEY_FILE}

  # Set ownership on the key
  chown ${MUNGE_USER}:${MUNGE_GROUP} ${MUNGE_KEY_FILE}
  # Enforce correct permission on the key
  chmod 0600 ${MUNGE_KEY_FILE}

else
  # Generate a munge key if it doesn't exist
  echo "Generating new munge key"
  /usr/sbin/mungekey --verbose
  chmod 0600 ${MUNGE_KEY_FILE}
fi

exit 0
