# Generated by Chef for AWS ParallelCluster <%= node['cluster']['node_type'] -%>
# Local modifications could be be overwritten.
<% case node['cluster']['node_type'] -%>
<%# MasterServer -%>
<% when 'MasterServer' -%>
<% if node['cluster']['scheduler'] == 'slurm' -%>
[program:cfn-hup]
command = <%= node['cluster']['cookbook_virtualenv_path'] %>/bin/python <%= node['cluster']['cookbook_virtualenv_path'] %>/bin/cfn-hup
# The following are needed because cfn-hup starts as a daemon
exitcodes = 0
autorestart = unexpected
startsecs = 0

[program:clustermgtd]
command = <%= node['cluster']['node_virtualenv_path'] %>/bin/clustermgtd
redirect_stderr = true
stdout_logfile = /var/log/parallelcluster/clustermgtd
<% end -%>

<% if node['cluster']['dcv_enabled'] == "master" && node['conditions']['dcv_supported'] -%>
[program:pcluster_dcv_authenticator]
command = <%= node['cluster']['dcv']['authenticator']['virtualenv_path'] %>/bin/python <%= node['cluster']['dcv']['authenticator']['user_home'] %>/pcluster_dcv_authenticator.py
      --port <%= Integer(node['cluster']['dcv_port']) + 1 %>
      --certificate <%= node['cluster']['dcv']['authenticator']['certificate'] %>
      --key <%= node['cluster']['dcv']['authenticator']['private_key'] %>
user = <%= node['cluster']['dcv']['authenticator']['user'] %>
environment = HOME="<%= node['cluster']['dcv']['authenticator']['user_home'] %>",USER="<%= node['cluster']['dcv']['authenticator']['user'] %>"
<% end -%>

<%# ComputeFleet -%>
<% when 'ComputeFleet' -%>
<% if node['cluster']['scheduler'] == 'slurm' -%>
[program:computemgtd]
command = <%= node['cluster']['node_virtualenv_path'] %>/bin/computemgtd
redirect_stderr = true
stdout_logfile = /var/log/parallelcluster/computemgtd
<% end -%>

<% end -%>
