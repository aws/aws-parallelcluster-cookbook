---
driver:
  name: vagrant

provisioner:
  name: chef_zero

platforms:
  - name: centos-7.0

suites:
  - name: default
    run_list:
      - recipe[aws-parallelcluster::default]
    attributes:
      cluster:
        base_os: <%= ENV['BASE_OS'] %>

  - name: default_gpu
    run_list:
      - recipe[aws-parallelcluster::default]
    attributes:
      cluster:
        base_os: <%= ENV['BASE_OS'] %>
        nvidia:
          enabled: 'yes'

  - name: base_install
    run_list:
      - recipe[aws-parallelcluster::base_install]
    attributes:

  - name: base_install_gpu
    run_list:
      - recipe[aws-parallelcluster::base_install]
    attributes:
      cluster:
        nvidia:
          enabled: 'yes'

  - name: slurm_install
    run_list:
      - recipe[aws-parallelcluster::slurm_install]

  - name: awsbatch_install
    run_list:
      - recipe[aws-parallelcluster::awsbatch_install]

  - name: base_config_HeadNode
    run_list:
      - recipe[aws-parallelcluster::prep_env]
      - recipe[aws-parallelcluster::base_config]
    attributes:
      cluster:
        node_type: 'HeadNode'
        stack_name: <%= ENV['AWS_STACK_NAME'] %>
        volume: <%= ENV['VOLUME'] %>
        region: <%= ENV['AWS_DEFAULT_REGION'] %>
        ephemeral_dir: <%= ENV['EPHEMERAL_DIR'] %>
        ebs_shared_dirs: <%= ENV['EBS_SHARED_DIRS'] %>
        cluster_user: <%= ENV['CLUSTER_USER'] %>
        # base_os is one of the base OSs supported by pcluster
        base_os: <%= ENV['BASE_OS'] %>
        custom_node_package: <%= ENV['PARALLELCLUSTER_NODE_URL'] %>
        # os attribute is used in pipeline code. i.e. centos7, centos7-custom
        os: <%= ENV['OS'] %>

  - name: slurm_config_HeadNode
    run_list:
      - recipe[aws-parallelcluster::prep_env]
      - recipe[aws-parallelcluster::slurm_config]
      - recipe[aws-parallelcluster::finalize]
      - recipe[aws-parallelcluster::tests]
    attributes:
      kitchen: true
      cluster:
        node_type: 'HeadNode'
        scheduler: 'slurm'
        stack_name: <%= ENV['AWS_STACK_NAME'] %>
        volume: <%= ENV['VOLUME'] %>
        region: <%= ENV['AWS_DEFAULT_REGION'] %>
        ephemeral_dir: <%= ENV['EPHEMERAL_DIR'] %>
        ebs_shared_dirs: <%= ENV['EBS_SHARED_DIRS'] %>
        cluster_user: <%= ENV['CLUSTER_USER'] %>
        ddb_table: <%= ENV['DDB_TABLE'] %>
        # base_os is one of the base OSs supported by pcluster
        base_os: <%= ENV['BASE_OS'] %>
        custom_node_package: <%= ENV['PARALLELCLUSTER_NODE_URL'] %>
        cluster_s3_bucket: <%= ENV['CLUSTER_CONFIG_S3_BUCKET'] %>
        cluster_config_s3_key: <%= ENV['CLUSTER_CONFIG_S3_KEY'] %>
        instance_types_data_s3_key: <%= ENV['INSTANCE_TYPES_DATA_S3_KEY'] %>
        # os attribute is used in pipeline code. i.e. centos7, centos7-custom
        os: <%= ENV['OS'] %>
        dcv_enabled: 'head_node'
        dcv_port: '8443'
        enable_intel_hpc_platform: 'true'
        enable_efa: 'compute'
        nvidia:
          enabled: <%= ENV['NVIDIA_ENABLED'] %>

  - name: awsbatch_config_HeadNode
    run_list:
      - recipe[aws-parallelcluster::prep_env]
      - recipe[aws-parallelcluster::awsbatch_config]
      - recipe[aws-parallelcluster::finalize]
      - recipe[aws-parallelcluster::tests]
    attributes:
      kitchen: true
      cluster:
        node_type: 'HeadNode'
        scheduler: 'awsbatch'
        stack_name: <%= ENV['AWS_STACK_NAME'] %>
        volume: <%= ENV['VOLUME'] %>
        region: <%= ENV['AWS_DEFAULT_REGION'] %>
        ephemeral_dir: <%= ENV['EPHEMERAL_DIR'] %>
        ebs_shared_dirs: <%= ENV['EBS_SHARED_DIRS'] %>
        cluster_user: <%= ENV['CLUSTER_USER'] %>
        ddb_table: <%= ENV['DDB_TABLE'] %>
        # base_os is one of the base OSs supported by pcluster
        base_os: <%= ENV['BASE_OS'] %>
        custom_node_package: <%= ENV['PARALLELCLUSTER_NODE_URL'] %>
        # os attribute is used in pipeline code. i.e. centos7, centos7-custom
        os: <%= ENV['OS'] %>
        dcv_enabled: 'head_node'
        dcv_port: '8443'
        custom_awsbatchcli_package: <%= ENV['CUSTOM_AWSBATCHCLI_URL'] %>
        nvidia:
          enabled: <%= ENV['NVIDIA_ENABLED'] %>

  - name: slurm_config_ComputeFleet
    run_list:
      - recipe[aws-parallelcluster::prep_env]
      - recipe[aws-parallelcluster::slurm_config]
      - recipe[aws-parallelcluster::finalize]
      - recipe[aws-parallelcluster::tests]
    attributes:
      kitchen: true
      cluster:
        node_type: 'ComputeFleet'
        scheduler: 'slurm'
        stack_name: <%= ENV['AWS_STACK_NAME'] %>
        volume: <%= ENV['VOLUME'] %>
        region: <%= ENV['AWS_DEFAULT_REGION'] %>
        ephemeral_dir: <%= ENV['EPHEMERAL_DIR'] %>
        ebs_shared_dirs: <%= ENV['EBS_SHARED_DIRS'] %>
        cluster_user: <%= ENV['CLUSTER_USER'] %>
        head_node: <%= ENV['HEAD_NODE'] %>
        head_node_private_ip: <%= ENV['HEAD_NODE_PRIVATE_IP'] %>
        # base_os is one of the base OSs supported by pcluster
        base_os: <%= ENV['BASE_OS'] %>
        slurm_nodename: 'fake-dy-compute-1'
        custom_node_package: <%= ENV['PARALLELCLUSTER_NODE_URL'] %>
        # os attribute is used in pipeline code. i.e. centos7, centos7-custom
        os: <%= ENV['OS'] %>
        dcv_enabled: 'head_node'
        dcv_port: '8443'
        enable_efa: 'compute'
        nvidia:
          enabled: <%= ENV['NVIDIA_ENABLED'] %>
