[tox]
toxworkdir=.tox
skipsdist=True
envlist =
    py{27,34,35,36,37,38}
    code-linters

# Default testenv. Used to run tests on all python versions.
[testenv]
deps = -rtest/unit/requirements.txt
setenv = PYTHONPATH = {toxinidir}/files/default
commands =
    py.test -l -v --basetemp={envtmpdir} --html=report.html --cov=files/default test/unit

# Section used to define common variables used by multiple testenvs.
[vars]
code_dirs =
    files/default/dcv/ \
    files/default/slurm/ \
    test/unit/

##############################
###     AUTO-FORMATTER     ###
##############################

# black is a code formatter for python: https://github.com/ambv/black.
# The following target formats python files with black formatter.
[testenv:black]
basepython = python3
skip_install = true
deps =
    black
commands =
    black -l 120 \
    {[vars]code_dirs} \
    {posargs}

# Checks that python files are correctly formatted.
[testenv:black-check]
basepython = python3
skip_install = true
deps =
    {[testenv:black]deps}
commands =
    {[testenv:black]commands} --check --diff

# isort is an imports sorter for python: https://github.com/timothycrosley/isort
# The following target sorts the import according to .isort.cfg file.
# Pin isort to the last release prior to 5.0.0, which resulted in import
# statements being flagged as improperly sorted where previously they were
# not. See https://timothycrosley.github.io/isort/docs/major_releases/introducing_isort_5/.
[testenv:isort]
basepython = python3
skip_install = true
deps =
    isort
    seed-isort-config
commands =
    isort -w 120 \
    {[vars]code_dirs} \
    {posargs}

# Checks that python imports are correctly sorted.
[testenv:isort-check]
basepython = python3
skip_install = true
deps = {[testenv:isort]deps}
commands = {[testenv:isort]commands} --check --diff

# Reformats code with black and isort.
[testenv:autoformat]
basepython = python3
skip_install = true
deps =
    {[testenv:isort]deps}
    {[testenv:black]deps}
commands =
    {[testenv:isort]commands}
    {[testenv:black]commands}


#############################
###        LINTERS        ###
#############################

# flake8 python linter: https://github.com/PyCQA/flake8.
# flake8 config is located in .flake8 file
[testenv:flake8]
basepython = python3
skip_install = true
deps =
    flake8
    flake8-docstrings
    flake8-bugbear
    flake8-mypy
# flake8-import-order # delegated to isort
    flake8-colors
    pep8-naming
commands =
    flake8 \
    {[vars]code_dirs} \
    {posargs}

# bandit security linter for python: https://github.com/PyCQA/bandit
[testenv:bandit]
basepython = python3
skip_install = true
deps =
    bandit
commands =
    bandit -r \
    {[vars]code_dirs} \
    {posargs}

# Pylint linter for python: https://www.pylint.org/
# Pylint config is located in .pylintrc file.
[testenv:pylint]
basepython = python3
deps =
    pyflakes
    pylint
commands =
    pylint \
    {[vars]code_dirs} \
    {posargs}

# Vulture finds unused code in python: https://github.com/jendrikseipp/vulture
[testenv:vulture]
basepython = python3
skip_install = true
deps =
    vulture
commands =
    vulture \
    {[vars]code_dirs} \
    {posargs}

# Static type checker for Python: http://mypy-lang.org/
[testenv:mypy]
basepython = python3
deps =
    mypy
commands =
    mypy \
    {[vars]code_dirs} \
    {posargs}

# Target that groups all code linters to run in Travis.
[testenv:code-linters]
basepython = python3
skip_install = true
deps =
    {[testenv:black-check]deps}
    {[testenv:isort-check]deps}
    {[testenv:flake8]deps}
# {[testenv:pylint]deps}
# {[testenv:bandit]deps}
commands =
    {[testenv:black-check]commands}
    {[testenv:isort-check]commands}
    {[testenv:flake8]commands}
# {[testenv:pylint]commands}
# {[testenv:bandit]commands}